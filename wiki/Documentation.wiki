#labels Featured
<wiki:toc max_depth="3" />

= Introduction =

= Aspect Language =
In this section we explain the !HyperAdapt aspect language.

http://hyperadapt.googlecode.com/svn/wiki/figures/taxonomy.png

== Basic Structure ==

{{{
<?xml version="1.0" encoding="UTF-8"?>
<schema targetNamespace="http://www.hyperadapt.net/pxweave/aspects">
<element name="aspect" type ="tns:Aspect"/>
    <complexType name="Aspect">
	<sequence>
	    <element 
                name="interface" 
                type="tns:Interface"/>
	    <element 
                name="adviceGroup" 
                minOccurs="1" 
                maxOccurs="unbounded" 
                type="tns:AdviceGroup"/>
	</sequence>
    	<attribute 
            name="name" 
            type="string"/>
    </complexType>
<!-- further definitions -->
</schema>
}}}

== Joinpoint Model ==

== Advice Actions (Adaptation Rules) ==

=== Kinds of Advice ===
Our aspect language provides three kinds of advice actions which will be explained in this section. 

*!BasicAdvice* is the common ancestor of all adaptation rule types in our aspect language. It just states that an advice can select a set of content-based joinpoints (i.e., nodes in the document) by an xPath expression.
{{{
<complexType name="BasicAdvice" abstract="true">
    <sequence>
	<element name="pointcut" type ="tns:XPath"/>
    </sequence>
</complexType>
}}}

*!SimpleAdvice* actions are used to manipulate simple content in an XML document, e.g., inserting or deleting text and changing attribute values. Its value can therefore be general text or restricted text content (e.g., a number).
{{{
<complexType name="SimpleAdvice" abstract="true">
    <complexContent>
	<extension base="tns:BasicAdvice">
	   <sequence>
             <element name="value" type="tns:SimpleValue"/>
	   </sequence>
	</extension>
    </complexContent>
</complexType>
}}}

In contrast to the above mentioned kinds of advice, *!ComplexAdvice* may contain abitrary, well-formed XML content or an XML tree.
{{{
<complexType name="ComplexAdvice" abstract="true">
    <complexContent>
	<extension base="tns:BasicAdvice">
	    <sequence>
	        <element name="value" type="tns:ComplexValue"/>
	    </sequence>
        </extension>
    </complexContent>
</complexType>
}}}

=== Basic Advice Actions ===
====!ChangeOrder====
This advice allows a re-arrangement of the child nodes of an element within the set of selected joinpoints. There are three options. _sortByName_ computes an ascending, alphanumerical order of child nodes with respect to a common `name` attribute (NOTE: The order determining attribute should be selectable, as well as the kind of order itself.) Second, _reverseOrder_ just inverts the order of child nodes. Finally, a permutation can be specified, which allows an arbitrary, user-specified re-arrangement. 
{{{	
<complexType name="ChangeOrder">
   <complexContent>
      <extension base="tns:BasicAdvice">			
         <choice>
	    <element name="sortByName"/><!--by attr-->
	    <element name="reverseOrder"/>
	    <element name="permutation" type="tns:Permutation"/>
         </choice>
      </extension>
    </complexContent>
</complexType>
}}}

====!ChooseVariant====
The *!ChooseVariant* advice selects a variant from a list of exchangeable nodes. 
{{{  
<complexType name="ChooseVariant">
   <complexContent>
       <extension base="tns:BasicAdvice"/>
   </complexContent>
</complexType>
}}}
To be applicable, a certain node pattern is required, e.g.:
<table>
<tr>
<th>
Input Pattern
</th>
<th>
Advice
</th>
<th>
Result
</th>
</tr>
<tr>
<td>
{{{
<root>
   <a>
      <x/>
      <y/>
      <z/>
   </a>
</root>
}}}
</td>
<td height="100%">
{{{
<chooseVariant>
   <pointcut>/root/a/z</pointcut>
</chooseVariant>
}}}
</td>
<td>
{{{
<root>
   <z/>
</root>
}}}
</td>
</tr>
</table>

====Delete====
This is a basic advice for deleting nodes in a document. The kind of deleted node is determined by the specified pointcut expression which may select element, attributes or text nodes.
{{{
<complexType name="Delete">
   <complexContent>
      <extension base="tns:BasicAdvice"/>
   </complexContent>
</complexType>
}}}

====!MoveElement====
This advice moves selected element nodes to a new position within the document it is applied to. The source element(s) are specified by the specified pointcut xPath expression while the target is specfied by an xPath expression in the _to_ element. Position is an additional child index position at the target position.
{{{
<complexType name="MoveElement">
   <complexContent>
      <extension base="tns:BasicAdvice">
	 <sequence>
	    <element name="to" type="tns:XPath"/>		
	 </sequence>	
	 <attribute name= "position" type="integer" use="required"/>
      </extension>
   </complexContent>
</complexType>
}}}


====!ReduceContent====
This advice removes parts of the content of a text node.
{{{
<complexType name="ReduceContent">
   <complexContent>
      <extension base="tns:BasicAdvice">
         <attribute name="deletePart" type="string"/>
      </extension>
   </complexContent>
</complexType>
}}}

====!FillComponentByID====
{{{
<complexType name="FillComponentByID">
    <complexContent>
        <extension base="tns:BasicAdvice">
 	    <sequence>
               <group ref="tns:componentGroup"/>
 	          <element name="source" type="tns:SourceContainer"/>
 	    </sequence>
        </extension>
    </complexContent>
</complexType>

<!-- Source Container Helper -->

<complexType name="SourceContainer">
   <sequence>
      <element name="sourceComponents" type="tns:XPath"/>
      <group name="componentGroup">
         <sequence>
	   <element name="identifyingAttribute" type="string"/>
	</sequence>
      </group>
   </sequence>
   <attribute name="document" type="tns:Name"/>
</complexType>
}}}

=== Advice Actions with Simple Content ===

====!ChangeValue====
{{{
<complexType name="ChangeValue">
   <complexContent>
      <extension base="tns:SimpleAdvice"/>
   </complexContent>
</complexType>
}}}

====!CollapseElement====
{{{
<complexType name="CollapseElement">
   <complexContent>
      <extension base="tns:SimpleAdvice"/>
   </complexContent>
</complexType>
}}}

====!EnrichContent====
{{{
<complexType name="EnrichContent">
   <complexContent>
      <extension base="tns:SimpleAdvice">
         <attribute name="position" type="integer"/>	
      </extension>
   </complexContent>
</complexType>
}}}


=== Advice Actions with Complex Content ===

====!ExpandElement====
{{{
<complexType name="ExpandElement">
   <complexContent>
      <extension base="tns:ComplexAdvice"/>
   </complexContent>
</complexType>
}}}

====!InsertElement====
{{{
<complexType name="InsertElement">
   <complexContent>
      <extension base="tns:ComplexAdvice">
	<attribute name= "position" type="integer" use="required"/>	
      </extension>	
   </complexContent>
</complexType>
}}}

== What can be _adviced_? ==

== Examples ==

= PX-Weave Weaving Engine =

== Basic Configuration ==

== Implementation of the Joinpoint Model ==

== Integration into Transformation Engines ==

http://hyperadapt.googlecode.com/svn/wiki/figures/taxonomy.png

=== Integration Concept ===

=== Cocoon Integration ===

= Aspect Interactions and Conflict Detection =

== Kinds of Conflicts ==

== Detection and Reporting at Runtime ==

== Approximated Static Conflict Detection ==